{"version":3,"sources":["components/Dialogs/Dialogs.module.css","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/AddMessageForm.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx"],"names":["module","exports","DialogItem","props","path","id","className","classes","dialog","active","to","name","Message","message","maxLength50","maxLengthCreator","AddMessageFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","validate","required","placeholder","type","Dialogs","state","dialogsPage","dialogsElements","dialogs","map","dialogData","key","messagesElements","messages","dialogMessage","isAuth","dialogsItems","values","sendMessage","newMessageBody","compose","connect","dispatch","sendMessageCreator","WithAuthRedirect"],"mappings":"2FACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,aAAe,8BAA8B,OAAS,wBAAwB,OAAS,wBAAwB,SAAW,0BAA0B,QAAU,2B,sFCYpMC,EATI,SAACC,GAClB,IAAIC,EAAI,mBAAeD,EAAME,IAC7B,OACE,yBAAKC,UAAWC,IAAQC,OAAS,IAAMD,IAAQE,QAC7C,kBAAC,IAAD,CAASC,GAAIN,GAAOD,EAAMQ,QCCjBC,EANC,SAACT,GACf,OACE,yBAAKG,UAAWC,IAAQM,SAAUV,EAAMU,U,iDCAtCC,EAAcC,YAAiB,IAoBxBC,EAAsBC,YAAU,CAACC,KAAM,yBAAjBD,EAlBZ,SAACd,GACtB,OACE,0BAAMgB,SAAUhB,EAAMiB,cACpB,6BACE,kBAACC,EAAA,EAAD,CACEC,UAAWC,IACXC,SAAU,CAACC,IAAUX,GACrBH,KAAM,iBACNe,YAAY,wBAGhB,6BACE,4BAAQC,KAAK,UAAb,eC6BOC,EAzCC,SAACzB,GAEf,IAAI0B,EAAQ1B,EAAM2B,YACdC,EAAkBF,EAAMG,QAAQC,KAAI,SAAAC,GACtC,OAAO,kBAAC,EAAD,CACLC,IAAKD,EAAW7B,GAChBM,KAAMuB,EAAWvB,KACjBN,GAAI6B,EAAW7B,QAIf+B,EAAmBP,EAAMQ,SAASJ,KAAI,SAAAK,GAAa,OACrD,kBAAC,EAAD,CACEH,IAAKG,EAAcjC,GACnBQ,QAASyB,EAAczB,aAQ3B,OAAIV,EAAMoC,OAKR,yBAAKjC,UAAWC,IAAQyB,SACtB,yBAAK1B,UAAWC,IAAQiC,cACrBT,GAEH,yBAAKzB,UAAWC,IAAQ8B,UACtB,6BAAOD,IAET,kBAACpB,EAAD,CACEG,SAjBgB,SAACsB,GACrBtC,EAAMuC,YAAYD,EAAOE,oBAIlB,kBAAC,IAAD,CAAUjC,GAAI,Y,wBCLVkC,sBACbC,aAfoB,SAAChB,GACrB,MAAO,CACLC,YAAaD,EAAMC,gBAIE,SAACgB,GACxB,MAAO,CACLJ,YAAa,SAACC,GACZG,EAASC,YAAmBJ,SAOhCK,IAFaJ,CAGbhB","file":"static/js/4.5016f08c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__2xRSA\",\"dialogsItems\":\"Dialogs_dialogsItems__2sNe2\",\"active\":\"Dialogs_active__2sQhs\",\"dialog\":\"Dialogs_dialog__lk_cw\",\"messages\":\"Dialogs_messages__1w_Up\",\"message\":\"Dialogs_message__1xIDh\"};","import React from 'react';\r\nimport classes from '../Dialogs.module.css';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst DialogItem = (props) => {\r\n  let path = `/dialogs/${props.id}`;\r\n  return (\r\n    <div className={classes.dialog + ' ' + classes.active}>\r\n      <NavLink to={path}>{props.name}</NavLink>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default DialogItem;","import React from 'react';\r\nimport classes from '../Dialogs.module.css';\r\n\r\nconst Message = (props) => {\r\n  return (\r\n    <div className={classes.message}>{props.message}</div>\r\n  )\r\n}\r\n\r\nexport default Message;","import React from 'react';\nimport { Field, reduxForm } from 'redux-form';\nimport { maxLengthCreator, required } from '../../utils/validators/validators';\nimport { Textarea } from '../Common/FormsControls/FormsControls';\n\nconst maxLength50 = maxLengthCreator(50);\n\nconst addMessageForm = (props) => {\n  return (\n    <form onSubmit={props.handleSubmit}>\n      <div>\n        <Field\n          component={Textarea}\n          validate={[required, maxLength50]}\n          name={\"newMessageBody\"}\n          placeholder=\"Enter your message\"\n        />\n      </div>\n      <div>\n        <button type=\"submit\">Submit</button>\n      </div>\n    </form>\n  )\n}\n\nexport const AddMessageFormRedux = reduxForm({form: \"dialogsAddMessageForm\"})(addMessageForm)","import React from 'react';\r\nimport classes from './Dialogs.module.css';\r\nimport DialogItem from './DialogItem/DialogItem';\r\nimport Message from './Message/Message';\r\nimport { Redirect } from 'react-router';\r\nimport { AddMessageFormRedux } from './AddMessageForm';\r\n\r\nconst Dialogs = (props) => {\r\n\r\n  let state = props.dialogsPage;\r\n  let dialogsElements = state.dialogs.map(dialogData => {\r\n    return <DialogItem\r\n      key={dialogData.id}\r\n      name={dialogData.name}\r\n      id={dialogData.id}\r\n    />\r\n  })\r\n\r\n  let messagesElements = state.messages.map(dialogMessage =>\r\n    <Message\r\n      key={dialogMessage.id}\r\n      message={dialogMessage.message}\r\n    />\r\n  )\r\n\r\n  const addNewMessage = (values) => {\r\n    props.sendMessage(values.newMessageBody)\r\n  }\r\n\r\n  if(!props.isAuth) {\r\n    return <Redirect to={\"/login\"} />\r\n  }\r\n\r\n  return (\r\n    <div className={classes.dialogs}>\r\n      <div className={classes.dialogsItems}>\r\n        {dialogsElements}\r\n      </div>\r\n      <div className={classes.messages}>\r\n        <div>{ messagesElements }</div>\r\n      </div>\r\n      <AddMessageFormRedux\r\n        onSubmit={addNewMessage}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Dialogs;","import React from 'react';\r\nimport classes from './Dialogs.module.css';\r\nimport DialogItem from './DialogItem/DialogItem';\r\nimport Message from './Message/Message';\r\nimport { sendMessageCreator } from '../../redux/dialogs-reducer';\r\nimport Dialogs from './Dialogs';\r\nimport { connect } from 'react-redux';\r\nimport { Redirect } from 'react-router';\r\nimport WithAuthRedirect from '../../hoc/withAuthRedirect';\r\nimport { compose } from 'redux';\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    dialogsPage: state.dialogsPage,\r\n  }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    sendMessage: (newMessageBody) => {\r\n      dispatch(sendMessageCreator(newMessageBody));\r\n    }\r\n  }\r\n}\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, mapDispatchToProps),\r\n  WithAuthRedirect\r\n)(Dialogs);"],"sourceRoot":""}